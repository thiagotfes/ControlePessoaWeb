package br.com.cpweb.bean;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.event.ActionEvent;

import org.omnifaces.util.Messages;

import br.com.cpweb.DAO.ProdutoDAO;
import br.com.cpweb.domain.Produto;
import br.com.cpweb.domain.itemVenda;

@SuppressWarnings("serial")
@ManagedBean
@ViewScoped
public class VendaBean implements Serializable {
	private List<Produto> produtos;
	private List<itemVenda> itensVenda;
	
	public List<Produto> getProdutos() {
		return produtos;
	}
	
	public void setProdutos(List<Produto> produtos) {
		this.produtos = produtos;
	}
	
	public List<itemVenda> getItensVenda() {
		return itensVenda;
	}
	
	public void setItensVenda(List<itemVenda> itensVenda) {
		this.itensVenda = itensVenda;
	}
	
	@PostConstruct
	public void listar() {
		try {
			ProdutoDAO produtoDAO = new ProdutoDAO();
			produtos = produtoDAO.listar("descricao");
			
			itensVenda = new ArrayList<>();
		} catch (RuntimeException erro) {
			Messages.addGlobalError("Ocorreu um erro ao tentar carregar a tela de vendas");
			erro.printStackTrace();
		}
	}
	
	public void adicionar(ActionEvent evento){
		Produto produto = (Produto) evento.getComponent().getAttributes().get("produtoSelecionado");
		BigDecimal soma = new BigDecimal(1);
		
		int achou = -1;
		for(int posicao = 0; posicao < itensVenda.size(); posicao++){
			if(itensVenda.get(posicao).getProduto().equals(produto)){
				achou = posicao;
			}
		}
		
		if(achou < 0){
			itemVenda itemVenda = new itemVenda();
			itemVenda.setPrecoParcial(produto.getPreco());
			itemVenda.setProduto(produto);
			itemVenda.setQuantidade(new BigDecimal("1"));
			itensVenda.add(itemVenda);
		} else {
			itemVenda itemVenda = itensVenda.get(achou);
			itemVenda.setQuantidade(itemVenda.getQuantidade().add(soma).movePointLeft(2));
			
		}
				
	}
}
